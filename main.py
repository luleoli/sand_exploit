from flask import Flask, render_template, request, flash, url_for, flash, redirect, send_from_directory
import pandas as pd
import lightgbm as lgb
from sklearn.model_selection import train_test_split
from sklearn.metrics import roc_auc_score
import os

log = pd.read_csv('send_test_log.csv')
test_id = str(log['ID'].max() + 1)

def new_test(df, predictors, new_vars, target):
    train_df, val_df = train_test_split(df, test_size=0.15, random_state=1)

    mdl = lgb.LGBMClassifier(random_state=0)
    mdl.fit(train_df[predictors], train_df[target])

    ens_mdl = lgb.LGBMClassifier(random_state=0)
    ens_mdl.fit(train_df[predictors + new_vars], train_df[target])

    gini = 2*(roc_auc_score(val_df[target], mdl.predict_proba(val_df[predictors])[:, 1]))-1
    ens_gini = 2*(roc_auc_score(val_df[target], ens_mdl.predict_proba(val_df[predictors + new_vars])[:, 1]))-1
    return gini - ens_gini

app = Flask(__name__)
app.config['SECRET_KEY'] = 'lucas'
app.config['UPLOAD_FOLDER'] = 'codigos'

@app.route('/newtest', methods=['GET','POST'])
def newtest():
    if request.method == 'POST':
        bname = request.form.get('inputBname')
        oldvars = request.form.get('inputOldvars')
        newvars = request.form.get('inputNewvars')
        perf = request.form.get('inputPerf')
        if not bname:
            flash('Name is required!')
        elif not oldvars:
            flash('Old vars is required!')
        elif not newvars:
            flash('New vars is required!')
        elif not perf:
            flash('Performance is required!')
        else:
            uploaded_file = request.files['fileSample']
            if uploaded_file.filename != '':
                filename = test_id + "_" + uploaded_file.filename
                uploaded_file.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))

            lift = new_test(pd.read_csv(bname), list(oldvars.replace(" ","").split(",")), list(newvars.replace(" ","").split(",")), perf)
            print(lift) 
            return redirect(url_for('report'))

    return render_template('newtest.html', testId = test_id)

@app.route('/report')
def report(): 
    return render_template('report.html')

@app.route('/codigos/<path:filename>', methods=['GET'])
def download(filename):   
    full_path = os.path.join(app.root_path, app.config['UPLOAD_FOLDER'])
    return send_from_directory(full_path, filename, as_attachment=True)

if __name__ == '__main__':
    app.run(debug=True)


